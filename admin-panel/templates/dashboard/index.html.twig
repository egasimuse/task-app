{% extends 'base.html.twig' %}

{% block title %}Admin Dashboard{% endblock %}

{% block body %}
<div class="dashboard-header">
    <h1>Admin Dashboard</h1>
    <div class="user-info">
        Welcome, {{ app.session.get('admin_user').username ?? 'Admin' }}
        <a href="{{ path('logout') }}" class="btn btn-sm btn-outline-secondary">Logout</a>
    </div>
</div>

<div class="recent-activity">
    <div class="section-header">
        <h2>Recent Tasks</h2>
        <a href="{{ path('tasks_new') }}" class="btn btn-primary">Create New Task</a>
    </div>
    <div class="table-responsive">
        <table class="table">
            <thead>
                <tr>
                    <th>Title</th>
                    <th>Assigned To</th>
                    <th>Status</th>
                    <th>Created</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                {% for task in tasks|slice(0, 10) %}
                <tr>
                    <td>{{ task.title }}</td>
                    <td>{{ task.assignee_name ?? 'Unassigned' }}</td>
                    <td>
                        {% if task.status == 'completed' %}
                            <span class="badge badge-success">Completed</span>
                        {% elseif task.status == 'in_progress' %}
                            <span class="badge badge-primary">In Progress</span>
                        {% else %}
                            <span class="badge badge-warning">{{ task.status|title }}</span>
                        {% endif %}
                    </td>
                    <td>{{ task.created_at ? task.created_at|date('Y-m-d H:i') : 'N/A' }}</td>
                    <td>
                        <a href="{{ path('tasks_show', {id: task.id}) }}" class="btn btn-sm btn-info">View</a>
                        <a href="{{ path('tasks_edit', {id: task.id}) }}" class="btn btn-sm btn-warning">Edit</a>
                        <button onclick="deleteTask({{ task.id }})" class="btn btn-sm btn-danger">Delete</button>
                    </td>
                </tr>
                {% else %}
                <tr>
                    <td colspan="5" class="text-center">No tasks found</td>
                </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>
</div>

<style>
.dashboard-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 2rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid #dee2e6;
}

.user-info {
    display: flex;
    align-items: center;
    gap: 1rem;
}

.recent-activity {
    background: white;
    padding: 1.5rem;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.recent-activity h2 {
    margin-bottom: 1rem;
    color: #333;
}

.table-responsive {
    overflow-x: auto;
}

.table {
    width: 100%;
    border-collapse: collapse;
}

.table th,
.table td {
    padding: 0.75rem;
    text-align: left;
    border-bottom: 1px solid #dee2e6;
}

.table th {
    background-color: #f8f9fa;
    font-weight: 600;
    color: #495057;
}

.badge {
    padding: 0.25rem 0.5rem;
    border-radius: 0.25rem;
    font-size: 0.75rem;
    font-weight: 600;
    text-transform: uppercase;
}

.badge-success {
    background-color: #28a745;
    color: white;
}

.badge-warning {
    background-color: #ffc107;
    color: #212529;
}

.btn-sm {
    padding: 0.25rem 0.5rem;
    font-size: 0.875rem;
}

.btn-info {
    background-color: #17a2b8;
    color: white;
}

.btn-warning {
    background-color: #ffc107;
    color: #212529;
}

.btn-outline-secondary {
    border: 1px solid #6c757d;
    color: #6c757d;
    background-color: transparent;
}

.btn-outline-secondary:hover {
    background-color: #6c757d;
    color: white;
}

.section-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem;
}

.section-header h2 {
    margin: 0;
}
</style>

<script>
function deleteTask(taskId) {
    if (confirm('Are you sure you want to delete this task? This action cannot be undone.')) {
        fetch(`/tasks/${taskId}/delete`, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json',
                'X-Requested-With': 'XMLHttpRequest'
            }
        })
        .then(response => {
            if (response.ok) {
                // Reload the page to refresh the task list
                window.location.reload();
            } else {
                alert('Error deleting task');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Error deleting task');
        });
    }
}
</script>
{% endblock %}
